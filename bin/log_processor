#!/usr/bin/env ruby
# frozen_string_literal: true

boot_file_path = File.expand_path('../lib/boot.rb', __dir__)
require_relative boot_file_path

def load_arguments
  options = {}
  OptionParser.new do |opts|
    opts.banner = 'Usage: lob_processor [options]'
    opts.on('-f', '--file_path FILE_PATH', 'the path of the file') { |v| options[:file_path] = v }
    opts.on('-h', '--help', 'Prints this help') do
      puts opts
      exit
    end
  end.parse!
  options
end

ARGS = load_arguments
DEFAULT_PATH = '/log/qgames.log'
FILE_PATH = DEFAULT_PATH
FILE_PATH = ARGS[:file_path] unless ARGS[:file_path].nil?
LOGGER = Logger.new($stdout)
ROOT = File.expand_path('..', __dir__)

def log_reader(file)
  puts "Processing #{file}"
  file_parser = QuakeLogFileParser.new
  File.foreach(File.join(ROOT, file)) do |line|
    file_parser.parse line
  end
  file_parser.print
  puts "Log #{file} processed correctly"
  puts "#{Time.now} -- Finished. Exiting now."
rescue StandardError => e
  LOGGER.error("#{e.class}: #{e.message}")
  LOGGER.error(e.backtrace)
  exit 1
end

def run
  log_reader(FILE_PATH)
end

run
